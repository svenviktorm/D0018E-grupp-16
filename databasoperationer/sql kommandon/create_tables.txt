    DROP TABLE IF EXISTS InShoppingCart;
    DROP TABLE IF EXISTS BookReviews;
    DROP TABLE IF EXISTS Orders_books;
    DROP TABLE IF EXISTS Orders;
    DROP TABLE IF EXISTS Books;
    DROP TABLE IF EXISTS Sellers;
    DROP TABLE IF EXISTS Users;
   

    CREATE TABLE Users(
        Id INT NOT NULL AUTO_INCREMENT,
        Username VARCHAR(100) NOT NULL UNIQUE,
        PasswordHash BIGINT(255) NOT NULL,
        Email VARCHAR(254),
        IsAdmin BOOL NOT NULL DEFAULT FALSE,
        IsSeller BOOL NOT NULL DEFAULT FALSE,
        DateCreated TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
        PRIMARY KEY (ID)
    );

    CREATE TABLE Sellers(
        Id INT NOT NULL ,
        Name VARCHAR(100) NOT NULL,
        Description TEXT,
        FOREIGN KEY (ID) REFERENCES Users(ID),
        PRIMARY KEY (ID)
    );

CREATE TABLE Books(
    Id INT NOT NULL AUTO_INCREMENT,
    Title VARCHAR(100) NOT NULL,
    Author VARCHAR(100) NOT NULL,
    SellerId INT NOT NULL,
    Edition VARCHAR(50),
    Description TEXT,
    StockAmount INT NOT NULL DEFAULT 0 CHECK (StockAmount >= 0),
    Available BOOL NOT NULL DEFAULT FALSE,
    ISBN BIGINT,
    NumRatings INT DEFAULT 0 CHECK (NumRatings >= 0),
    SumRatings INT DEFAULT 0 CHECK (SumRatings >= 0),
    Price INT CHECK (PRICE >= 0),
    PRIMARY KEY (ID),
    FOREIGN KEY (SellerID) REFERENCES Sellers(ID),
    FULLTEXT(Author)
);

CREATE TABLE InShoppingCart(
    UserID INT NOT NULL,
    BookID INT NOT NULL,
    Quantity INT NOT NULL CHECK (Quantity > 0),
    PRIMARY KEY (UserID,BookID),
    FOREIGN KEY (UserID) REFERENCES Users(Id),
    FOREIGN KEY (BookID) REFERENCES Books(Id)
);

CREATE TABLE Orders(
    Id INT NOT NULL AUTO_INCREMENT,
    SellerID INT NOT NULL,
    CustomerID INT NOT NULL,
    TimeEntered TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TimeConfirmed TIMESTAMP, 
    TimeSent TIMESTAMP,
    TimePaymentReceived TIMESTAMP,
    PaymentReceived BOOL NOT NULL DEFAULT FALSE,
    PaymentMethod ENUM('invoice', 'card') NOT NULL,
    Status ENUM('reserved', 'confirmed', 'sent', 'canceled', 'returned') NOT NULL,
    DeliveryAddress VARCHAR(250),
    BillingAddress VARCHAR(250),
    PRIMARY KEY (ID),
    FOREIGN KEY (CustomerID) REFERENCES Users(Id),
    FOREIGN KEY (SellerID) REFERENCES Sellers(Id)
);

CREATE TABLE Orders_books(
    OrderID INT NOT NULL,
    BookID INT NOT NULL,
    Price INT NOT NULL CHECK (Price > 0),
    Quantity INT NOT NULL CHECK (Quantity > 0)
);

CREATE TABLE BookReviews(
    Id INT NOT NULL,
    BookId INT NOT NULL,
    UserId INT NOT NULL,
    Text VARCHAR(2500),
    Rating TINYINT ,
    PRIMARY KEY (Id),
    FOREIGN KEY (BookId) REFERENCES Books(Id),
    FOREIGN KEY (UserId) REFERENCES Users(Id)
);

